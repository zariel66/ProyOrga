.data
	titulo: .asciiz "Proyecto Organización\nPrimer Parcial\n"
	menuString: .asciiz "Ingrese una opción del menú\n1.-Suma en Decimal\n2.-Suma en hexadecimal\n3.-Suma Mixta\nIngrese una opción\n"
	opcionNumero: .byte
	esdigito: .asciiz "\nEs un digito"
	nodigito: .asciiz "\nNo Es un digito"
	
.text
	main: #etiquitea donde inicia la ejecución del programa
		la $a0,titulo #argumento de syscall para impresion de cadena por pantalla
		jal imprimir		
		j menu #salto a la etiquita Menu
	menu:
		la $a0,menuString #impresión del menú
		jal imprimir
		j opciones
	opciones:
		#la $a0,opcionNumero
		#li $a1,2
		li $v0,12 #codigo de input del sistema para leer caracter
		syscall
		add $s0,$v0,$zero
		#andi $t0,$v0,0x0F # where $t0 contains the ascii digit .
		#add $a0,$zero,$t0
		#li $v0,1 #impresion de integer
		#syscall
		jal verificarDigito
		j terminarPrograma
	verificarDigito:
		slti $t0,$s0,'0'  #Comparo si el caracter enviado es menor al valor del caracter '0'
		li $t1,1
		beq  $t0,$t1,caracterInvalido #si el resultado de la comparacion es menor(=1) entonces no es digito
		li $t1,'9'
		bgt $s0,$t1,caracterInvalido  #si el resultado de la comparacion es mayor entonces no es digito
		la $a0,esdigito  #cargo el mensaje de es digito
		addi $sp,$sp,-4 # genero espacio en la pila 
		sw $ra,4($sp) #almaceno la dirección de retorno
		jal imprimir
		lw $ra,4($sp) #cargo la dirección de retorno
		addi $sp,$sp,4 #recupero el espacio de la pila
		jr $ra
	imprimir:
		li $v0,4 #constante 4 que activa impresion de cadena por pantalla
		syscall
		jr $ra
	terminarPrograma:
		li $v0,10 #termina el programa
		syscall
	caracterInvalido:
		la $a0,nodigito
		addi $sp,$sp,-4 # genero espacio en la pila 
		sw $ra,4($sp) #almaceno la dirección de retorno
		jal imprimir
		lw $ra,4($sp) #cargo la dirección de retorno
		addi $sp,$sp,4 #recupero el espacio de la pila
		jr $ra
		
		
	
	
